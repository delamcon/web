Интернет магазин - study spot


Интернет магазин с небольшим (базовым) функционалом написан с помощью фреймворка flask, а также с использованием sqlalchemy и компонентов bootstrap. 




Функционал


Есть три, так называемые, ступени доступа:


* функционал, доступный неавторизованному/незарегистрированному пользователю;
* функционал, доступный авторизованному пользователю;
* функционал, доступный администратору, реализованный через панель администратора.


Незарегистрированный/неавторизованный пользователь может просмотреть главную страницу магазина, каталог товаров и информацию о бонусной системе.
Авторизованный пользователь обладает личным кабинетом, где может изменять информацию о себе (ФИО, адрес доставки), добавлять товары в корзину и оформлять заказы.
Администратор с помощью панели может просматривать заказы пользователей, изменять информацию о них (статус заказа, добавление трек-номера заказа, добавление собственного комментария к заказу), добавлять товары в каталог и удалять их. 










Структура всего проекта


Во всем проекте 26 файлов, а именно:
* файл main.py с основным кодом и с информацией о базе данных;
* 15 файлов html, два из которых -  base.html  и admin_base.html - базовые шаблоны с панелями навигации;
* 11 файлов css;        
* файл shop.db - база данных с тремя таблицами (users, orders, items);
* и множество картинок.


Структура основного кода 
Основной код находится в main.py, в нем прописаны: 
* Класс Users - таблица данных пользователей;
* Класс Orders - таблица данных о заказах;
* Класс Items - таблица данных о товарах;
* Главная функция def main(), где написан весь код.


Соответственно функция def main() состоит из следующего:
* def main_page() - возвращает main_page.html - главная страница сайта;
* def cookie() - очищение сессии (куки), возвращает main_page.html; 
* def catalog() - возвращает catalog.html -  каталог товаров;
* def authorization() - возвращает auth.html - страница авторизации пользователя, вводится почта и пароль;
* def registration() - возвращает reg.html - страница регистрации пользователя, пользователь вводит ФИО, номер телефона, почту и пароль;
* def bonus_system() - возвращает bonuses.html - страница с информацией о бонусной системе (которая сейчас дорабатывается!);
* def personal_info() - возвращает personal_info.html - страница с личной информацией пользователя, историей заказов (ее можно изменять/добавлять);
* def cart() - возвращает cart.html - корзина пользователя с товарами, здесь пользователь оформляет заказ, вводит адрес доставки и тд.;
*  def admin() - возвращает admin.html - страница авторизации администратора, вводится логин и пароль (пароль администратора захэширован непосредственно в main.py);
* def panel() - возвращает panel.html - страница панели администратора, на ней отображаются заказы пользователей, информацию которых можно изменять/добавлять (статус, трек-номер и тд.);
* def add_item() - возвращает add_item.html - форма добавления товара в каталог;
* def delete_item() - возвращает delete_item.html - страница удаления товаров из каталога;
* def item() - возвращает item.html - страница с информацией об отдельном товаре;
* def info_changing() -  возвращает info_changing.html - страница с формой, где можно внести изменения в личных данных пользователя. 










Данные панели администратора: 
* логин admin1984
* пароль _admin_1984_
